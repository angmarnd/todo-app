{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["From","todos","setTodos","inputText","setInputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","aria-hidden","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","Form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0354397.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst From = ({todos, setTodos, inputText, setInputText, setStatus}) => {\r\n    // Input changes and call this function\r\n    const inputTextHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, \r\n            {text: inputText, \r\n                completed: false, \r\n                id: Math.random() * 1000\r\n            }\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\"></input>\r\n            <button onClick={submitTodoHandler} className=\"todo-button\">\r\n                <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default From;\r\n\r\n         //https://daveceddia.com/usestate-hook-examples/","import React from 'react';\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    // Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        })\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\"\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    // console.log(todos);\r\n    return(\r\n        \r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n            {filteredTodos.map((todo) => (\r\n            <Todo \r\n            setTodos={setTodos} \r\n            todos={todos} \r\n            todo={todo}\r\n            text={todo.text} \r\n            key={todo.id}/>\r\n            ))}\r\n\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n// Importing Components\nimport Form from \"./Components/Form\"\nimport TodoList from \"./Components/TodoList\"\nfunction App() {\n\n  // State\n  const [inputText, setInputText] = useState(\"\"); // hooks\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  // Run once when the app start\n   useEffect(() =>{\n     getLocalTodos();\n   },[]);\n  // Use effect\n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case 'completed':\n          setFilteredTodos(todos.filter(todo => todo.completed === true))\n          break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter(todo => todo.completed === false))\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    }\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  // Save to local\n  // const saveLocalTodos = () => {\n  //   if (localStorage.getItem('todos') === null) {\n  //     localStorage.setItem('todos', JSON.stringify([]));\n  //   } else {\n  //     localStorage.setItem('todos', JSON.stringify(todos));\n  //   }\n  // }\n    const saveLocalTodos = () => { \n    localStorage.setItem('todos', JSON.stringify(todos));\n}\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      // JSON.parse(localStorage.getItem('todos'));\n    // console.log(todoLocal);\n    setTodos(todoLocal);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>ToDo List </h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}